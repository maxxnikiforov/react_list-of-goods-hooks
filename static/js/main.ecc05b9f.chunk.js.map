{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","goods","setGoods","isVisible","setIsXisible","lengthName","setLengthName","selectLength","filter","good","length","className","map","type","onClick","reverse","sort","i1","i2","localeCompare","method","value","onChange","event","target","item","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAyBMC,EAAeN,EAAMO,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUL,KAEzD,OAAOF,EAEH,sBAAKQ,UAAU,MAAf,UACE,uCACA,oBAAIA,UAAU,YAAd,SACGJ,EAAaK,KAAI,SAAAH,GAAI,OACpB,oBAAeE,UAAU,iBAAzB,SACGF,GADMA,QAMb,sBAAKE,UAAU,iBAAf,UACE,wBACEA,UAAU,cACVE,KAAK,SACLC,QAzCM,WACdZ,EAAS,YAAID,GAAOc,YAqCd,qBAQA,wBACEJ,UAAU,cACVE,KAAK,SACLC,QA7CO,WACfZ,EAAS,YAAID,GAAOe,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,QAyChD,iCAQA,wBACEP,UAAU,cACVE,KAAK,SACLC,QAjDS,WACjBZ,EAAS,YAAID,GAAOe,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGP,OAASQ,EAAGR,YA6C9C,4BAQA,wBACEC,UAAU,cACVE,KAAK,SACLC,QArDI,WACZZ,EAAS,GAAD,OAAKJ,IACbQ,EAAc,IAgDR,mBAQA,uBAAMc,OAAO,MAAMT,UAAU,YAA7B,UACE,sBAAMA,UAAU,YAAhB,wBACA,wBAAQU,MAAOhB,EAAYiB,SAvDnB,SAACC,GACjB,IAAQF,EAAUE,EAAMC,OAAhBH,MAERf,GAAee,IAoDP,SACG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIT,KAAI,SAAAa,GAAI,OACvC,wBAAQJ,MAAOI,EAAf,SAAsBA,kBAQhC,wBACEd,UAAU,aACVE,KAAK,SACLC,QAAS,kBAAMV,GAAa,IAH9B,oBCpGNsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ecc05b9f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState(goodsFromServer);\n  const [isVisible, setIsXisible] = useState(false);\n  const [lengthName, setLengthName] = useState(1);\n\n  const reverse = () => {\n    setGoods([...goods].reverse());\n  };\n\n  const sortAlph = () => {\n    setGoods([...goods].sort((i1, i2) => i1.localeCompare(i2)));\n  };\n\n  const sortLength = () => {\n    setGoods([...goods].sort((i1, i2) => i1.length - i2.length));\n  };\n\n  const reset = () => {\n    setGoods([...goodsFromServer]);\n    setLengthName(1);\n  };\n\n  const changeLen = (event: { target: { value: string } }): void => {\n    const { value } = event.target;\n\n    setLengthName(+value);\n  };\n\n  const selectLength = goods.filter(good => good.length >= lengthName);\n\n  return isVisible\n    ? (\n      <div className=\"app\">\n        <h1>Goods</h1>\n        <ul className=\"app__list\">\n          {selectLength.map(good => (\n            <li key={good} className=\"app__list-item\">\n              {good}\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"app__buttonBox\">\n          <button\n            className=\"app__button\"\n            type=\"button\"\n            onClick={reverse}\n          >\n            Reverse\n          </button>\n\n          <button\n            className=\"app__button\"\n            type=\"button\"\n            onClick={sortAlph}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            className=\"app__button\"\n            type=\"button\"\n            onClick={sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            className=\"app__button\"\n            type=\"button\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n\n          <form method=\"GET\" className=\"app__form\">\n            <span className=\"app__form\">min length</span>\n            <select value={lengthName} onChange={changeLen}>\n              {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(item => (\n                <option value={item}>{item}</option>\n              ))}\n            </select>\n          </form>\n        </div>\n      </div>\n    )\n    : (\n      <button\n        className=\"app__start\"\n        type=\"button\"\n        onClick={() => setIsXisible(true)}\n      >\n        START\n      </button>\n    );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}